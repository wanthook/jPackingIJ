/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wanthook.ij.jpacking;

import com.wanthook.ij.jpacking.function.Md5;
import com.wanthook.ij.jpacking.function.PropertiesSource;
import com.wanthook.ij.jpacking.function.httpRequest;
import com.wanthook.ij.jpacking.function.varApp;
//import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel
import org.json.JSONObject;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import org.json.JSONArray;


/**
 *
 * @author wanthook
 */
public class home extends javax.swing.JFrame {

    private Md5 md = new Md5();
    private httpRequest hR = new httpRequest();
//    private VarApp vA = new VarApp();
    private PropertiesSource pS = new PropertiesSource();
    
    private static String[] beratList;
    private static Object[][] data;
    
    private timbangan tim;
    private printUlangKarung printUK;
    private printUlangPalet printPA;
    
    private varApp VarApp = new varApp();
    /**
     * Creates new form home
     */
    public home() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        
        openProp();
        
        printUK = new printUlangKarung();
        printPA = new printUlangPalet();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar1 = new javax.swing.JToolBar();
        cmdTimbang = new javax.swing.JButton();
        cmdReprint = new javax.swing.JButton();
        cmdPrintUlangPalet = new javax.swing.JButton();
        cmdRefresh = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        cmdSetting = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtMaterial = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtBatch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbBerat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtDateStart = new com.toedter.calendar.JDateChooser();
        txtDateEnd = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        lblNama = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Packing Application");

        toolBar1.setFloatable(false);
        toolBar1.setOpaque(false);

        cmdTimbang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scale-24.png"))); // NOI18N
        cmdTimbang.setText("Timbang");
        cmdTimbang.setFocusable(false);
        cmdTimbang.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdTimbang.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdTimbang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTimbangActionPerformed(evt);
            }
        });
        toolBar1.add(cmdTimbang);

        cmdReprint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer-24.png"))); // NOI18N
        cmdReprint.setText("Print Ulang Karung");
        cmdReprint.setFocusable(false);
        cmdReprint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdReprint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdReprint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdReprintActionPerformed(evt);
            }
        });
        toolBar1.add(cmdReprint);

        cmdPrintUlangPalet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer-24.png"))); // NOI18N
        cmdPrintUlangPalet.setText("Print Ulang Palet");
        cmdPrintUlangPalet.setFocusable(false);
        cmdPrintUlangPalet.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdPrintUlangPalet.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdPrintUlangPalet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintUlangPaletActionPerformed(evt);
            }
        });
        toolBar1.add(cmdPrintUlangPalet);

        cmdRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sinchronize-24.png"))); // NOI18N
        cmdRefresh.setText("Refresh");
        cmdRefresh.setFocusable(false);
        cmdRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRefreshActionPerformed(evt);
            }
        });
        toolBar1.add(cmdRefresh);
        toolBar1.add(jSeparator1);

        cmdSetting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/settings-5-24.png"))); // NOI18N
        cmdSetting.setText("Setting");
        cmdSetting.setFocusable(false);
        cmdSetting.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cmdSetting.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cmdSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSettingActionPerformed(evt);
            }
        });
        toolBar1.add(cmdSetting);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));

        txtMaterial.setToolTipText("Kode Material");

        jLabel1.setText("Kode Material");

        jLabel2.setText("Batch");

        jLabel3.setText("Berat");

        txtDateStart.setDateFormatString("dd-MM-yyyy");

        txtDateEnd.setDateFormatString("dd-MM-yyyy");

        jLabel4.setText("Tanggal Awal Cetak");

        jLabel5.setText("Tanggal Akhir Cetak");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbBerat, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 95, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbBerat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDateStart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDateEnd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNama.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
        lblNama.setForeground(new java.awt.Color(32, 185, 36));
        lblNama.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNama.setText("jLabel6");
        lblNama.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblNama, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblNama)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(toolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSettingActionPerformed
        // TODO add your handling code here:
        String password = "26a1b378c7b389a396764d08b4ced9ff";
        
        javax.swing.JLabel PLabel = new javax.swing.JLabel("Password");
        javax.swing.JPasswordField TxtPass = new javax.swing.JPasswordField();
        Object[] obj = {PLabel, TxtPass};
        //String data = JOptionPane.showInputDialog(null, "Silakan Masukkan Password Setting","Setting Auth",JOptionPane.OK_CANCEL_OPTION);
        int ConfReply = JOptionPane.showConfirmDialog(null, obj, "Setting Auth", JOptionPane.OK_CANCEL_OPTION);
        
        try 
        {
            if(ConfReply==JOptionPane.OK_OPTION)
            {
                if(md.StringEncrypt(String.valueOf(TxtPass.getPassword()).trim()).equals(password))
                {
                    new Seting().setVisible(true);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Password Salah!!!","Perhatian",JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (Exception ex) 
        {
            Logger.getLogger(home.class.getName()).log(Level.SEVERE, null, ex);
        }
//        new Seting().setVisible(true);
    }//GEN-LAST:event_cmdSettingActionPerformed

    private void cmdRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRefreshActionPerformed
        // TODO add your handling code here:
        setTable();
    }//GEN-LAST:event_cmdRefreshActionPerformed

    private void cmdTimbangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTimbangActionPerformed
        // TODO add your handling code here:
//        tim = new timbangan(VarApp);
        if(tim.isVisible()==false)
        {
            tim = new timbangan(VarApp);
            tim.setVisible(true);
        }
        else
        {
            tim.toFront();
            tim.repaint();
        }
            
    }//GEN-LAST:event_cmdTimbangActionPerformed

    private void cmdReprintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdReprintActionPerformed
        // TODO add your handling code here:
        if(printUK.isVisible()==false)
        {
            printUK = new printUlangKarung(VarApp);
            printUK.setVisible(true);
        }
        else
        {
            printUK.toFront();
            printUK.repaint();
        }
    }//GEN-LAST:event_cmdReprintActionPerformed

    private void cmdPrintUlangPaletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintUlangPaletActionPerformed
        // TODO add your handling code here:
        if(printPA.isVisible()==false)
        {
            printPA = new printUlangPalet(VarApp);
            printPA.setVisible(true);
        }
        else
        {
            printPA.toFront();
            printPA.repaint();
        }
    }//GEN-LAST:event_cmdPrintUlangPaletActionPerformed
    
    private void openProp()
    {
        Properties ps = pS.OpenProperties();
        
        if(ps!=null && !ps.isEmpty())
        {
            VarApp.setIp(ps.getProperty("ip"));
            VarApp.setUsername(ps.getProperty("username"));
            VarApp.setPassword(ps.getProperty("password"));
            VarApp.setPort(ps.getProperty("port"));
            VarApp.setBaudrate(ps.getProperty("baudrate"));
            VarApp.setDatabits(ps.getProperty("databits"));
            VarApp.setStopbits(ps.getProperty("stopbits"));
            VarApp.setParity(ps.getProperty("parity"));
            VarApp.setBeratPapan(ps.getProperty("beratPapan"));
            VarApp.setPrinter(ps.getProperty("printer"));
            VarApp.setSecret(ps.getProperty("secret"));
            VarApp.setClientId(ps.getProperty("clientId"));
            
//            if(!getToken())
//            {
                setupHttp();
//            }
            getUserInfo();
            setTable();
            setCmbBerat();
            
            tim = new timbangan();
        }
    }
    
    private boolean getToken()
    {
        try
        {
            VarApp.tokken =  pS.OpenFile("token.setting");
            
            System.out.println(VarApp.getTokken());
            if(!VarApp.tokken.isEmpty())
            {
                return true;
            }
            
        }
        catch(Exception e)
        {
            
            e.printStackTrace();
        }
        return false;
    }
    
    private void getUserInfo()
    {
        String htt = hR.httpGet("http://"+VarApp.ip+"/api/user-info",VarApp.tokken);
//        System.out.println(htt);
        if(hR.isJSONValid(htt))
        {
                //        System.out.println(htt);
            JSONObject jo = new JSONObject(htt);
            VarApp.userName = jo.getString("name");

            String httMesin = hR.httpGet("http://"+VarApp.ip+"/api/mesin/ambil-mesin",VarApp.tokken);
            System.out.println(httMesin);
            JSONObject joM = new JSONObject(httMesin);
            JSONArray joA = joM.getJSONArray("data");

            VarApp.mesinId = String.valueOf((int)joA.getJSONObject(0).get("id"));
            VarApp.mesinKode = joA.getJSONObject(0).getString("kode");
            VarApp.mesinNama = joA.getJSONObject(0).getString("nama");
            VarApp.mesinRegisterStart = String.valueOf((int)joA.getJSONObject(0).get("register_start"));
            VarApp.mesinRegisterEnd = String.valueOf((int)joA.getJSONObject(0).get("register_end"));

            lblNama.setText(VarApp.userName);
        }

    }
    
    private void setupHttp()
    {
        String htt = hR.httpPost("http://"+VarApp.ip+"/oauth/token", "grant_type=password&client_id="+VarApp.clientId+"&client_secret="+VarApp.secret+"&username="+VarApp.username+"&password="+VarApp.password+"&scope=*&identifier=","");
//        System.out.println("kesini "+htt);
        if(hR.isJSONValid(htt))
        {
            JSONObject jo = new JSONObject(htt);
            VarApp.setTokken(jo.get("access_token").toString());
            VarApp.setResetToken(jo.get("refresh_token").toString());

            try
            {
                pS.WriteFile(VarApp.tokken, "token.setting");
                pS.WriteFile(VarApp.resetToken, "refresh.setting");
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        
        
    }
    
    private void setTable()
    {
        String param = "material="+txtMaterial.getText()+
                       "&batch="+txtBatch.getText()+
                       "&tipe_berat="+cmbBerat.getSelectedItem()+
                       "&date_start="+((javax.swing.JTextField)this.txtDateStart.getDateEditor().getUiComponent()).getText()+
                       "&date_end="+((javax.swing.JTextField)this.txtDateEnd.getDateEditor().getUiComponent()).getText();
//        System.out.println(param);
        String htt = hR.httpGet("http://"+VarApp.ip+"/api/timbangan/list-timbangan?"+param,VarApp.tokken);
//        System.out.println("http://"+VarApp.ip+"/api/timbangan/list-timbangan?"+param);
        if(hR.isJSONValid(htt))
        {
            JSONObject jO = new JSONObject(htt);
            JSONArray jA = jO.getJSONArray("data");
            home.data = null;

            if(jA.length()>0)
            {
                data = new Object[jA.length()][];

                for(int i=0 ; i<jA.length() ; i++)
                {
                    data[i] = new Object[]{
                        jA.getJSONObject(i).getString("material"),
                        String.format("%010d",(int)jA.getJSONObject(i).get("no")),
                        jA.getJSONObject(i).getString("warna_cones"),
                        jA.getJSONObject(i).getString("batch"),
                        jA.getJSONObject(i).getString("mill"),
                        jA.getJSONObject(i).getString("tipe_berat"),
                        jA.getJSONObject(i).getString("deskripsi"),
                        jA.getJSONObject(i).get("qty"),
                        jA.getJSONObject(i).get("standar"),
                        jA.getJSONObject(i).get("actual"),
                        jA.getJSONObject(i).get("berat_papan"),
                        jA.getJSONObject(i).get("berat_sc"),
                        jA.getJSONObject(i).get("bruto"),
                        jA.getJSONObject(i).get("no_reg"),
                        jA.getJSONObject(i).getString("created_at"),
                    };
                }
            }

            tblData.setModel(new DefaultTableModel(data,
                    new String[]{"material",
                        "Nomor", 
                        "Warna Cones", 
                        "Batch", 
                        "Mill", 
                        "Tipe Berat",
                        "Deskripsi",
                        "Qty", 
                        "Standar", 
                        "Actual", 
                        "Berat Papan",
                        "Berat Sisa Cones",
                        "Bruto",
                        "No. Reg",
                        "Tanggal Cetak"})
                    {
                        boolean[] canEdit = new boolean[]{false,false,false,false,false,false,false,false,false,false, false, false, false, false};
                        @Override
                        public boolean isCellEditable(int rowIndex, int columnIndex) 
                        {
                            return canEdit [columnIndex];
                        }
                    }  );  
            }
        
    }
    
    private void setCmbBerat()
    {
        String htt = hR.httpGet("http://"+VarApp.ip+"/api/berat/list-berat",VarApp.tokken);
        if(hR.isJSONValid(htt))
        {
            JSONObject jO = new JSONObject(htt);
            JSONArray jA = jO.getJSONArray("data");

            home.beratList = new String[jA.length()];

            cmbBerat.addItem("");

            for(int i=0 ; i<jA.length() ; i++)
            {
                home.beratList[i] = jA.getJSONObject(i).getString("deskripsi");
                cmbBerat.addItem(home.beratList[i] + " | "+ jA.getJSONObject(i).getString("tipe"));
            }
            AutoCompleteDecorator.decorate(cmbBerat);
        }            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbBerat;
    private javax.swing.JButton cmdPrintUlangPalet;
    private javax.swing.JButton cmdRefresh;
    private javax.swing.JButton cmdReprint;
    private javax.swing.JButton cmdSetting;
    private javax.swing.JButton cmdTimbang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JLabel lblNama;
    private javax.swing.JTable tblData;
    private javax.swing.JToolBar toolBar1;
    private javax.swing.JTextField txtBatch;
    private com.toedter.calendar.JDateChooser txtDateEnd;
    private com.toedter.calendar.JDateChooser txtDateStart;
    private javax.swing.JTextField txtMaterial;
    // End of variables declaration//GEN-END:variables
}
