/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.wanthook.ij.jpacking;

import com.wanthook.ij.jpacking.function.httpRequest;
import com.wanthook.ij.jpacking.function.varApp;
//import java.util.concurrent.TimeUnit;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONObject;
import com.wanthook.ij.jpacking.function.varApp;
import com.wanthook.ij.jpacking.function.barcodePrint;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.regex.Pattern;
//import java.util.Arrays;
import javax.swing.JOptionPane;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author wanthook
 */
public class timbangan extends javax.swing.JFrame {

    
    private httpRequest hR = new httpRequest();
    private DefaultTableModel modelDMaterial;
    private varApp VarApp;
    private barcodePrint bP;
    
    private static Object[][] dataMaterial;
    private static Object[][] dataDMaterial;
    
    private static int packingId = 0;
    
    private static SerialPort serialPort;
    
    public timbangan(){}
    
    public timbangan(varApp VarApp) {
        this.VarApp = VarApp;
        initComponents();
        this.setLocationRelativeTo(null);
        lblMesin.setText("Kode Mesin : "+VarApp.mesinKode);
        txtBeratPapan.setText(VarApp.beratPapan);
        setTableTimbangan();
        serialPort = new SerialPort(VarApp.port);
        
        ReadConn();      
        
        bP = new barcodePrint(VarApp.printer);
//        txtActual.setText("jsdhkjsahdjkas");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogMaterial = new javax.swing.JDialog();
        jPanel7 = new javax.swing.JPanel();
        txtDMaterial = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtDBatch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDMaterial = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtActual = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblMesin = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtKodeMaterial = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBatchMaterial = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTipeBerat = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtBerat = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCones = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtWarnaMaterial = new javax.swing.JTextArea();
        txtTareLain = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtBruto = new javax.swing.JTextField();
        txtDeskripsi = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtPalet = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtRegister = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtBeratAktual = new javax.swing.JTextField();
        cmbBeratPapan = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        txtBeratPapan = new javax.swing.JTextField();
        cmbTanpaBerat = new javax.swing.JCheckBox();
        cmdKeluar = new javax.swing.JButton();
        cmdCetak = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        txtBeratSC = new javax.swing.JTextField();
        cmbTanpaLogo = new javax.swing.JCheckBox();
        cmbTanpaMadeIn = new javax.swing.JCheckBox();
        jLabel18 = new javax.swing.JLabel();
        txtNoReg = new javax.swing.JTextField();
        cmdPaleteActual = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProses = new javax.swing.JTable();
        lblTotData = new javax.swing.JLabel();

        dialogMaterial.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogMaterial.setTitle("Search Material");
        dialogMaterial.setAlwaysOnTop(true);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Cari Material"));

        txtDMaterial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDMaterialKeyReleased(evt);
            }
        });

        jLabel15.setText("Kode Material");

        jLabel16.setText("Batch");

        txtDBatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDBatchKeyReleased(evt);
            }
        });

        tblDMaterial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDMaterial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDMaterialMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDMaterial);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel16))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txtDMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDBatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout dialogMaterialLayout = new javax.swing.GroupLayout(dialogMaterial.getContentPane());
        dialogMaterial.getContentPane().setLayout(dialogMaterialLayout);
        dialogMaterialLayout.setHorizontalGroup(
            dialogMaterialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        dialogMaterialLayout.setVerticalGroup(
            dialogMaterialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Timbangan");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 206, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Timbangan");

        txtActual.setEditable(false);
        txtActual.setBackground(new java.awt.Color(1, 1, 1));
        txtActual.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtActual.setForeground(new java.awt.Color(16, 255, 0));
        txtActual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtActual.setText("0");
        txtActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActualActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 3, 13)); // NOI18N
        jLabel2.setText("Nilai Dari Mesin Timbangan");

        lblMesin.setText("jLabel6");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtActual, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMesin, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMesin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtActual, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Material"));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Kode Material :");
        jLabel3.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(97, 16));

        txtKodeMaterial.setEditable(false);
        txtKodeMaterial.setBackground(new java.awt.Color(211, 209, 208));

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Warna Material :");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Batch Material :");
        jLabel5.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel5.setMinimumSize(new java.awt.Dimension(97, 16));

        txtBatchMaterial.setEditable(false);
        txtBatchMaterial.setBackground(new java.awt.Color(211, 209, 208));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Tipe Berat :");
        jLabel6.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel6.setMinimumSize(new java.awt.Dimension(97, 16));

        txtTipeBerat.setEditable(false);
        txtTipeBerat.setBackground(new java.awt.Color(211, 209, 208));

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Berat Standar :");

        txtBerat.setEditable(false);
        txtBerat.setBackground(new java.awt.Color(211, 209, 208));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Tare Cones:");

        txtCones.setEditable(false);
        txtCones.setBackground(new java.awt.Color(211, 209, 208));

        txtWarnaMaterial.setEditable(false);
        txtWarnaMaterial.setBackground(new java.awt.Color(211, 209, 208));
        txtWarnaMaterial.setColumns(20);
        txtWarnaMaterial.setLineWrap(true);
        txtWarnaMaterial.setRows(5);
        txtWarnaMaterial.setTabSize(2);
        jScrollPane3.setViewportView(txtWarnaMaterial);

        txtTareLain.setEditable(false);
        txtTareLain.setBackground(new java.awt.Color(211, 209, 208));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Bruto :");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Tare Lain :");

        txtBruto.setEditable(false);
        txtBruto.setBackground(new java.awt.Color(211, 209, 208));

        txtDeskripsi.setEditable(false);
        txtDeskripsi.setBackground(new java.awt.Color(211, 209, 208));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Karung Per Palet :");

        txtPalet.setEditable(false);
        txtPalet.setBackground(new java.awt.Color(211, 209, 208));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtBatchMaterial)
                                .addGap(160, 160, 160))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtBerat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTareLain, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtKodeMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtTipeBerat, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtPalet))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCones, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKodeMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBatchMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipeBerat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtBerat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtCones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtBruto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtTareLain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtPalet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Timbangan"));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Register :");
        jLabel8.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel8.setMinimumSize(new java.awt.Dimension(97, 16));

        txtRegister.setEditable(false);
        txtRegister.setBackground(new java.awt.Color(211, 209, 208));

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Qty :");
        jLabel9.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel9.setMinimumSize(new java.awt.Dimension(97, 16));

        txtQty.setBackground(new java.awt.Color(254, 254, 254));
        txtQty.setText("0");
        txtQty.setEnabled(false);
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtQtyKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Berat Aktual :");
        jLabel12.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel12.setMinimumSize(new java.awt.Dimension(97, 16));

        txtBeratAktual.setEditable(false);
        txtBeratAktual.setBackground(new java.awt.Color(211, 209, 208));
        txtBeratAktual.setText("0");

        cmbBeratPapan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBeratPapanActionPerformed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Berat Papan :");
        jLabel13.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel13.setMinimumSize(new java.awt.Dimension(97, 16));

        txtBeratPapan.setBackground(new java.awt.Color(254, 254, 254));
        txtBeratPapan.setEnabled(false);

        cmbTanpaBerat.setText("Tanpa Berat");
        cmbTanpaBerat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTanpaBeratActionPerformed(evt);
            }
        });

        cmdKeluar.setText("Keluar");
        cmdKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdKeluarActionPerformed(evt);
            }
        });

        cmdCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer-24.png"))); // NOI18N
        cmdCetak.setText("Cetak");
        cmdCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCetakActionPerformed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Berat SC :");

        txtBeratSC.setEditable(false);
        txtBeratSC.setBackground(new java.awt.Color(211, 209, 208));
        txtBeratSC.setText("0");

        cmbTanpaLogo.setText("Tanpa Logo");
        cmbTanpaLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTanpaLogoActionPerformed(evt);
            }
        });

        cmbTanpaMadeIn.setText("Tanpa Made In");
        cmbTanpaMadeIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTanpaMadeInActionPerformed(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("No Reg :");
        jLabel18.setMaximumSize(new java.awt.Dimension(97, 16));
        jLabel18.setMinimumSize(new java.awt.Dimension(97, 16));

        txtNoReg.setEditable(false);
        txtNoReg.setBackground(new java.awt.Color(211, 209, 208));

        cmdPaleteActual.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/printer-24.png"))); // NOI18N
        cmdPaleteActual.setText("Palete Actual");
        cmdPaleteActual.setEnabled(false);
        cmdPaleteActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPaleteActualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtRegister))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNoReg)
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(cmdPaleteActual)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBeratSC, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtBeratAktual, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbTanpaLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbTanpaBerat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtBeratPapan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbBeratPapan)
                                .addGap(33, 33, 33)))
                        .addComponent(cmbTanpaMadeIn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTanpaBerat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBeratAktual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTanpaLogo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtBeratSC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTanpaMadeIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbBeratPapan)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBeratPapan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmdKeluar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdCetak, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmdPaleteActual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("List Barcode Untuk Palet"));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblProses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProses.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(tblProses);

        lblTotData.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        lblTotData.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotData.setText("Total Data : 0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTotData, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotData))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbBeratPapanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbBeratPapanActionPerformed
        // TODO add your handling code here:
        if(cmbBeratPapan.isSelected())
        {
            txtBeratPapan.setEnabled(true);
        }
        else
        {
            txtBeratPapan.setEnabled(false);
        }
    }//GEN-LAST:event_cmbBeratPapanActionPerformed

    private void cmbTanpaBeratActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTanpaBeratActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTanpaBeratActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dialogMaterial.setSize(800, 350);
        dialogMaterial.setLocationRelativeTo(null);
        dialogMaterial.setVisible(true);
        setDTableMaterial();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtDMaterialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDMaterialKeyReleased
        // TODO add your handling code here:
        if(txtDMaterial.getText().length() > 3)
        {
            this.setDTableMaterial();
        }
    }//GEN-LAST:event_txtDMaterialKeyReleased

    private void txtDBatchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDBatchKeyReleased
        // TODO add your handling code here:
        if(txtDBatch.getText().length() > 3)
        {
            this.setDTableMaterial();
        }
    }//GEN-LAST:event_txtDBatchKeyReleased

    private void tblDMaterialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDMaterialMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2)
        {
            int row = tblDMaterial.getSelectedRow();

            int id = (int)dataDMaterial[row][10];
            packingId = id;
//            System.out.println(id);
            txtKodeMaterial.setText(String.valueOf(dataDMaterial[row][0]));
            txtWarnaMaterial.setText(String.valueOf(dataDMaterial[row][1]));
            txtBatchMaterial.setText(String.valueOf(dataDMaterial[row][2]));
            txtTipeBerat.setText(String.valueOf(dataDMaterial[row][7]));
            txtDeskripsi.setText(String.valueOf(dataDMaterial[row][8]));
            txtBerat.setText(String.valueOf(dataDMaterial[row][3]));
            txtCones.setText(String.valueOf(dataDMaterial[row][4]));
            txtTareLain.setText(String.valueOf(dataDMaterial[row][5]));
            txtBruto.setText(String.valueOf(dataDMaterial[row][6]));
            txtPalet.setText(String.valueOf(dataDMaterial[row][9]));

            txtRegister.setText(this.registerNumber(id));
            txtNoReg.setText(this.regNum());
            
            if(String.valueOf(dataDMaterial[row][7]).equals("SISA CONES") || 
               String.valueOf(dataDMaterial[row][7]).equals("PARCEL") || 
               String.valueOf(dataDMaterial[row][7]).equals("SAMPLE"))
            {
                txtQty.setEnabled(true);
                txtQty.setEditable(true);
                
            }
            else
            {
                txtQty.setEnabled(false);
                txtQty.setEditable(false);
            }
            
            txtQty.setText("0");
            txtBeratSC.setText("0");
            txtBeratAktual.setText("0");
            
            setTableTimbangan();
            
            dialogMaterial.dispose();
//            new formTimbang(id).setVisible(true);
        }
    }//GEN-LAST:event_tblDMaterialMouseClicked

    private void txtQtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyTyped
        // TODO add your handling code here:
        char chr = evt.getKeyChar();
        
        if(!Character.isDigit(chr) && evt.getKeyCode()!=8)
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtQtyKeyTyped

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased
        // TODO add your handling code here:
        String txtqty = txtQty.getText();
        String txtberat = txtBerat.getText();
        
        if(!txtqty.isEmpty() && !txtberat.isEmpty())
        {
            Float hsl = null;
            
            hsl = Float.valueOf(txtqty) * Float.valueOf(txtberat);
            
            txtBeratSC.setText(String.format("%.2f", hsl));
            
        }
    }//GEN-LAST:event_txtQtyKeyReleased

    private void cmdKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdKeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cmdKeluarActionPerformed

    private void cmdCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCetakActionPerformed
        // TODO add your handling code here:
        if(packingId>0)
        {
//            simpan();
            switch(txtTipeBerat.getText())
            {
                case "SISA CONES":
                case "PARCEL" :
                case "SAMPLE" :
                    if(Float.parseFloat(txtBeratSC.getText())>0)
                    {
                        simpan();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Nilai QTY belum dimasukkan", "Perhatian", JOptionPane.WARNING_MESSAGE);
                    }
                    break;
                default:
                    if(Float.parseFloat(txtBeratAktual.getText())>0)
                    {
                        simpan();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Benang belum ditimbang", "Perhatian", JOptionPane.WARNING_MESSAGE);
                    }
                break;
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Material Belum dipilih.","Perhatian",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_cmdCetakActionPerformed

    private void cmbTanpaLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTanpaLogoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTanpaLogoActionPerformed

    private void cmbTanpaMadeInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTanpaMadeInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTanpaMadeInActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if(serialPort==null)
            return;
        try
        {
            if(serialPort.isOpened())
                serialPort.closePort();//Close serial port
        }
        catch(SerialPortException e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosed

    private void cmdPaleteActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPaleteActualActionPerformed
        // TODO add your handling code here:
        if(txtTipeBerat.getText().equals("ACTUAL"))
        {
            //bikin palet karung
            String par = "packing_id="+packingId;
            String pos = hR.httpPost("http://"+VarApp.ip+"/api/timbangan/simpan-palet",par,VarApp.tokken);
//                        System.out.print(pos);
            if(!pos.equals("error"))
            {
                JSONObject jOK = new JSONObject(pos);

                String idP = jOK.get("id").toString();

                if(!idP.isEmpty() && idP!="0")
                {
                    String pal = bP.paletBarcode(dataMaterial, Integer.toString(packingId));
                    bP.printBarcode(pal, VarApp.printer);
                }
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Tipe berat bukan ACTUAL, tidak bisa membuat palete ini.","Perhatian",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_cmdPaleteActualActionPerformed

    private void txtActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtActualActionPerformed
       
    private void simpan()
    {
        if(cmbBeratPapan.isSelected())
        {
            txtBeratAktual.setText(String.valueOf(Float.parseFloat(txtActual.getText().trim()) - Float.parseFloat(txtBeratPapan.getText().trim())));
        }
        else
        {
            txtBeratAktual.setText(txtActual.getText());
        }
        
        String param = "no="+txtRegister.getText() +
                       "&material="+txtKodeMaterial.getText()+
                       "&warna_cones="+txtWarnaMaterial.getText()+
                       "&batch="+txtBatchMaterial.getText()+
                       "&mill="+VarApp.mesinKode+
                       "&tare_cones="+txtCones.getText()+
                       "&tare_lain="+txtTareLain.getText()+
                       "&tipe_berat="+txtTipeBerat.getText()+
                       "&deskripsi="+txtDeskripsi.getText()+
                       "&qty="+txtQty.getText()+
                       "&standar="+txtBerat.getText()+
                       "&actual="+txtBeratAktual.getText()+
                       "&berat_sc="+txtBeratSC.getText()+
                       "&no_reg="+txtNoReg.getText()+
                       "&bruto="+txtBruto.getText()+
//                       "&total_cones="+txt.getText()+
                       "&berat_papan="+txtBeratPapan.getText()+
                       "&packing_id="+packingId;
        String htt = hR.httpPost("http://"+varApp.ip+"/api/timbangan/simpan-timbangan",param,VarApp.tokken);
//        System.out.println(htt);
        if(!htt.equals("error"))
        {
            JSONObject jO = new JSONObject(htt);
            
            String id = jO.get("id").toString();
            
            if(!id.isEmpty() && id!="0")
            {
                String regNum = txtRegister.getText();
                String noReg = txtNoReg.getText();
                
                setTableTimbangan();
                txtRegister.setText(this.registerNumber(packingId));
                txtNoReg.setText(this.regNum());
                
                boolean[] options = new boolean[3];
                options[0] = true;
                options[1] = true;
                options[2] = true;
                
                if(cmbTanpaLogo.isSelected())
                {
                    options[0] = false;
                }
                if(cmbTanpaBerat.isSelected())
                {
                    options[1] = false;
                }
                
                if(cmbTanpaMadeIn.isSelected())
                {
                    options[2] = false;
                }
                
                String berat = "0";
                
                if(txtTipeBerat.getText().equals("SISA CONES") || 
                   txtTipeBerat.getText().equals("PARCEL") || 
                   txtTipeBerat.getText().equals("SAMPLE"))
                {
                    berat = txtBeratSC.getText();
                }
                else if(txtTipeBerat.getText().equals("ACTUAL"))
                {
                    berat = txtBeratAktual.getText();
                }
                else
                {
                    berat = txtBerat.getText();
                }
                
                String prop[] = {
                    txtKodeMaterial.getText(),
                    txtBatchMaterial.getText(),
                    VarApp.mesinKode + regNum,
                    berat,
                    noReg,
                    txtBruto.getText(),
                    txtTipeBerat.getText(),
                    VarApp.userName
                };
                
                String label = bP.karungBarcode(options, prop);
                bP.printBarcode(label, VarApp.printer);
                
                int paletVal = Integer.valueOf(txtPalet.getText());
                
                if(paletVal > 0)
                {
                    if(tblProses.getRowCount() >= paletVal)
                    {
                        //bikin palet karung
                        String par = "packing_id="+packingId;
                        String pos = hR.httpPost("http://"+VarApp.ip+"/api/timbangan/simpan-palet",par,VarApp.tokken);
//                        System.out.print(pos);
                        if(!pos.equals("error"))
                        {
                            JSONObject jOK = new JSONObject(pos);
                            
                            String idP = jOK.get("id").toString();
                            
                            if(!idP.isEmpty() && idP!="0")
                            {
                                String pal = bP.paletBarcode(dataMaterial, Integer.toString(packingId));
                                
                                bP.printBarcode(pal, VarApp.printer);
                            }
                        }
                    }
                }
                
                /*
                if(txtTipeBerat.getText().equals("KARUNG"))
                {
                    if(tblProses.getRowCount()>=20)
                    {
                        //bikin palet karung
                        String par = "packing_id="+packingId;
                        String pos = hR.httpPost("http://"+VarApp.ip+"/api/timbangan/simpan-palet",par,VarApp.tokken);
//                        System.out.print(pos);
                        if(!pos.equals("error"))
                        {
                            JSONObject jOK = new JSONObject(pos);
                            
                            String idP = jOK.get("id").toString();
                            
                            if(!idP.isEmpty() && idP!="0")
                            {
                                String pal = bP.paletBarcode(dataMaterial, Integer.toString(packingId));
                                
                                bP.printBarcode(pal, VarApp.printer);
                            }
                        }
                    }
                }
                else if(txtTipeBerat.getText().equals("BOX"))
                {
                    if(tblProses.getRowCount()==11)
                    {
                        //bikin palet box
                        String par = "packing_id="+packingId;
                        String pos = hR.httpPost("http://"+VarApp.ip+"/api/timbangan/simpan-palet",par,VarApp.tokken);
                        
                        if(!pos.equals("error"))
                        {
                            JSONObject jOK = new JSONObject(pos);
            
                            String idP = jOK.get("id").toString();
                            
                            if(!idP.isEmpty() && idP!="0")
                            {
                                String pal = bP.paletBarcode(dataMaterial, Integer.toString(packingId));
                                bP.printBarcode(pal, VarApp.printer);
                            }
                        }
                    }
                }
                */
                setTableTimbangan();
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Isian kurang lengkap", "Perhatian", JOptionPane.WARNING_MESSAGE);
        }
        
    }
    
    private void setDTableMaterial()
    {
        
        String param = "material="+txtDMaterial.getText()+
                       "&batch="+txtDBatch.getText();
//        System.out.println(param);
        String htt = hR.httpGet("http://"+varApp.ip+"/api/packing/list-packing?"+param,VarApp.tokken);
        JSONObject jO = new JSONObject(htt);
        JSONArray jA = jO.getJSONArray("data");
        timbangan.dataDMaterial = null;
        
        if(jA.length()>0)
        {
            dataDMaterial = new Object[jA.length()][];
            
            for(int i=0 ; i<jA.length() ; i++)
            {
                dataDMaterial[i] = new Object[]{
                    jA.getJSONObject(i).getString("material"),
                    jA.getJSONObject(i).getString("warna_cones"),
                    jA.getJSONObject(i).getString("batch"),
                    jA.getJSONObject(i).getString("berat_material"),
                    jA.getJSONObject(i).getString("tare_cones"),
                    jA.getJSONObject(i).get("tare_lain"),
                    jA.getJSONObject(i).get("bruto"),
                    jA.getJSONObject(i).getString("berat.tipe"),
                    jA.getJSONObject(i).getString("berat.deskripsi"), 
                    jA.getJSONObject(i).get("berat.palet"),
                    jA.getJSONObject(i).get("id"),
                    
                };
            }
        }
        
        tblDMaterial.setModel(new DefaultTableModel(dataDMaterial,
                new String[]{"material",
                    "Warna Cones", 
                    "Batch", 
                    "Berat Standar",
                    "Tare Cones", 
                    "Tare Lain",
                    "Bruto",
                    "Jenis Berat",
                    "Dekripsi",
                    "Karung/Palet"})
                {
                    boolean[] canEdit = new boolean[]{false,false,false,false,false,false,false,false,false,false, false, false,false};
                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) 
                    {
                        return canEdit [columnIndex];
                    }
                }  );  
//        tblDMaterial.clear
    }
    
    private JSONArray dataTimbangan()
    {
        String param = "packing_id="+packingId;
//        System.out.println(param);
        String htt = hR.httpGet("http://"+varApp.ip+"/api/timbangan/proseslist-timbangan?"+param,VarApp.tokken);
        if(hR.isJSONValid(htt))
        {
            JSONObject jO = new JSONObject(htt);
            return jO.getJSONArray("data");
        }
        else
            return null;
    }
    
    private void setTableTimbangan()
    {
        JSONArray jA = dataTimbangan();
        
        Object data[][] = null;
        if(jA!=null)
        {
            if(jA.length()>0)
            {
                data = new Object[jA.length()][];

                for(int i=0 ; i<jA.length() ; i++)
                {
                    data[i] = new Object[]{
                        jA.getJSONObject(i).getString("material"),
                        String.format("%010d",(int)jA.getJSONObject(i).get("no")),
                        jA.getJSONObject(i).getString("warna_cones"),
                        jA.getJSONObject(i).getString("batch"),
                        jA.getJSONObject(i).getString("mill"),
                        jA.getJSONObject(i).getString("tipe_berat"),
                        jA.getJSONObject(i).getString("deskripsi"),
                        jA.getJSONObject(i).get("qty"),
                        jA.getJSONObject(i).getString("standar"),
                        jA.getJSONObject(i).getString("actual"),
                        jA.getJSONObject(i).getString("berat_papan"),
                        jA.getJSONObject(i).get("berat_sc"),
                        jA.getJSONObject(i).get("bruto"),
                        jA.getJSONObject(i).get("no_reg"),
//                        jA.getJSONObject(i).get(VarApp.userName),
                        jA.getJSONObject(i).getString("created_at"),
                    };
                }            
            }
            dataMaterial = data;
            tblProses.setModel(new DefaultTableModel(data,
                    new String[]{"material",
                        "Nomor", 
                        "Warna Cones", 
                        "Batch", 
                        "Mill", 
                        "Tipe Berat",
                        "Deskripsi",
                        "Qty", 
                        "Standar", 
                        "Actual", 
                        "Berat Papan", 
                        "Berat SC",
                        "Bruto",
                        "No. REG",
                        "Tanggal Cetak"})
                    {
                        boolean[] canEdit = new boolean[]{false,false,false,false,false,false,false,false,false,false, false};
                        @Override
                        public boolean isCellEditable(int rowIndex, int columnIndex) 
                        {
                            return canEdit [columnIndex];
                        }
                    }  );  

            lblTotData.setText("Total Data : "+jA.length());
        }
//        tblDMaterial.clear
    }
    
    private String registerNumber(int id)
    {
        String reg  = "";
        
        String htt = hR.httpGet("http://"+varApp.ip+"/api/timbangan/register-timbangan?packing_id="+id,varApp.tokken);
        
        if(hR.isJSONValid(htt))
        {
            JSONObject jO = new JSONObject(htt);

            reg = String.format("%010d",(int)jO.get("reg_num"));            
        }
        
        return reg;
    }
    
    private String regNum()
    {
        String reg  = "";
        
        String htt = hR.httpGet("http://"+varApp.ip+"/api/timbangan/noreg-timbangan",varApp.tokken);
        
        if(hR.isJSONValid(htt))
        {
            JSONObject jO = new JSONObject(htt);
        
            reg = String.valueOf(jO.get("no_reg"));
        }
        
        return reg;
    }
    
    private void ReadConn()
    {
        int parity = SerialPort.PARITY_NONE;
        if(VarApp.parity.trim().equals("even"))
        {
            parity = SerialPort.PARITY_EVEN;
        }
        else if(VarApp.parity.trim().equals("odd"))
        {
            parity = SerialPort.PARITY_ODD;
        }
        try {
            if(!serialPort.isOpened())
            {
                System.out.println("Masih tertutup");
                System.out.println("Membuka Port ("+Integer.valueOf(VarApp.baudrate.trim())+","+ 
                                     Integer.valueOf(VarApp.databits.trim())+","+
                                     Integer.valueOf(VarApp.stopbits.trim())+","+
                                     SerialPort.PARITY_NONE+")");
                serialPort.openPort();//Open serial port
                serialPort.setParams(Integer.valueOf(VarApp.baudrate.trim()), 
                                     Integer.valueOf(VarApp.databits.trim()), 
                                     Integer.valueOf(VarApp.stopbits.trim()), 
                                     SerialPort.PARITY_NONE);//Set params. Also you can set params by this string: serialPort.setParams(9600, 8, 1, 0);
            }
            int mask =  SerialPort.MASK_RXCHAR;
            
            serialPort.setEventsMask(mask);
            SerialPortReader spr;
            
            spr = new SerialPortReader();
            if(spr != null)
                serialPort.addEventListener(spr);
            
        }
        catch (SerialPortException ex) {
            System.out.println(ex);
        }
    }
    
    private void writeF(String content, String file)
    {
         try
        {
            PrintWriter writer = new PrintWriter(file, "UTF-8");
            writer.println(content);
            writer.close();
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cmbBeratPapan;
    private javax.swing.JCheckBox cmbTanpaBerat;
    private javax.swing.JCheckBox cmbTanpaLogo;
    private javax.swing.JCheckBox cmbTanpaMadeIn;
    private javax.swing.JButton cmdCetak;
    private javax.swing.JButton cmdKeluar;
    private javax.swing.JButton cmdPaleteActual;
    private javax.swing.JDialog dialogMaterial;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMesin;
    private javax.swing.JLabel lblTotData;
    private javax.swing.JTable tblDMaterial;
    private javax.swing.JTable tblProses;
    private javax.swing.JTextField txtActual;
    private javax.swing.JTextField txtBatchMaterial;
    private javax.swing.JTextField txtBerat;
    private javax.swing.JTextField txtBeratAktual;
    private javax.swing.JTextField txtBeratPapan;
    private javax.swing.JTextField txtBeratSC;
    private javax.swing.JTextField txtBruto;
    private javax.swing.JTextField txtCones;
    private javax.swing.JTextField txtDBatch;
    private javax.swing.JTextField txtDMaterial;
    private javax.swing.JTextField txtDeskripsi;
    private javax.swing.JTextField txtKodeMaterial;
    private javax.swing.JTextField txtNoReg;
    private javax.swing.JTextField txtPalet;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRegister;
    private javax.swing.JTextField txtTareLain;
    private javax.swing.JTextField txtTipeBerat;
    private javax.swing.JTextArea txtWarnaMaterial;
    // End of variables declaration//GEN-END:variables
    class SerialPortReader implements SerialPortEventListener
    {
//        String msg = "";
        Pattern pattern = Pattern.compile("[^\\\\.0123456789]");
        String msg = "",sBuffer="";
//        String ret = "";
        
        @Override
        public void serialEvent(SerialPortEvent e)
        {
//            System.out.println(e.isRXCHAR());
            if(e.isRXCHAR()) //jika data ada
            {
                
                if(e.getEventValue()>0)
                {
                    try
                    {
                        byte buffer[];
                        buffer = serialPort.readBytes(e.getEventValue());
                        String sBuffer = new String(buffer);
                        msg+= sBuffer;
                        System.out.println(msg);
                        if(msg.toLowerCase().contains("kg"))
                        {
                            String[] val = msg.split(",");
//                            System.out.println(val[val.length-1]);
                            sBuffer = val[val.length-1].replaceAll("Kg", "").trim();
                            sBuffer = String.valueOf(Float.parseFloat(sBuffer));
                            txtActual.setText(sBuffer);
                            txtBeratAktual.setText(sBuffer);
                            msg="";
                        }
                    }
                    catch(SerialPortException spe)
                    {
                        spe.printStackTrace();
                    }
                }
            }
        }
    }
}
